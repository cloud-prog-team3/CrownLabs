apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "instance-automation.fullname" . }}
  labels:
    {{- include "instance-automation.labels" . | nindent 4 }}
{{- with .Values.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "instance-automation.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "instance-automation.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "instance-automation.fullname" . }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ include "instance-automation.version" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "--namespace-whitelist={{ .Values.configurations.generic.whitelistLabels }}"
            - "--website-base-url={{ .Values.configurations.generic.websiteBaseUrl }}"
            - "--instances-auth-url={{ .Values.configurations.generic.instancesAuthUrl }}"
            - "--container-env-sidecars-tag={{ include "instance-automation.containerEnvironmentSidecarsTag" . }}"
            - "--vm-registry={{ .Values.configurations.privateContainerRegistry.url }}"
            - "--vm-registry-secret={{ .Values.configurations.privateContainerRegistry.secretName }}"
            - "--max-concurrent-reconciles={{ .Values.configurations.maxConcurrentReconciles }}"
            - "--max-concurrent-reconciles-termination={{ .Values.configurations.automation.maxConcurrentTerminationReconciles }}"
            - "--max-concurrent-reconciles-submission={{ .Values.configurations.automation.maxConcurrentSubmissionReconciles }}"
            - "--instance-termination-status-check-timeout={{ .Values.configurations.automation.terminationStatusCheckTimeout }}"
            - "--instance-termination-status-check-interval={{ .Values.configurations.automation.terminationStatusCheckInterval }}"
            - "--instance-inactive-termination-status-check-timeout={{ .Values.configurations.automation.inactiveTerminationStatusCheckTimeout }}"
            - "--instance-inactive-termination-status-check-interval={{ .Values.configurations.automation.inactiveTerminationStatusCheckInterval }}"
            - "--instance-inactive-termination-max-number-of-alerts={{.Values.configurations.automation.inactiveTerminationMaxNumberOfAlerts}}" 
            - "--instance-inactive-termination-default-timeout={{.Values.configurations.automation.inactiveTerminationDefaultTimeout}}"
            - "--smtp-server={{ .Values.configurations.smtp.server }}"
            - "--smtp-port={{ .Values.configurations.smtp.port }}"
            - "--smtp-identity={{ .Values.configurations.smtp.identity }}"
            - "--smtp-username={{ .Values.configurations.smtp.username }}"
            - "--smtp-password={{ .Values.configurations.smtp.password }}"
            - "--smtp-from={{ .Values.configurations.smtp.from }}"
          ports:
            - name: metrics
              containerPort: 8080
              protocol: TCP
            - name: probes
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: probes
            initialDelaySeconds: 3
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: probes
            initialDelaySeconds: 3
            periodSeconds: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  {{- include "instance-automation.selectorLabels" . | nindent 18 }}
              topologyKey: kubernetes.io/hostname
